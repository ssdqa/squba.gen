% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anomaly_detection.R
\name{ms_anom_euclidean}
\alias{ms_anom_euclidean}
\title{*_ms_anom_la Euclidean Distance Computation}
\usage{
ms_anom_euclidean(fot_input_tbl, grp_vars, var_col)
}
\arguments{
\item{fot_input_tbl}{table output by \code{\link[=compute_fot]{compute_fot()}} for *_ms_anom_at analyses}

\item{grp_vars}{the variables that should be preserved in the cross join}

\item{var_col}{the column with the numerical statistic of interest for the euclidean
distance computation}
}
\value{
data frame with mean and median values for the user provided variable column
and the euclidean distance value from the all site mean
}
\description{
This function will compute the Euclidean Distance for the \code{var_col} at each
site in comparison to the overall, all-site mean.
}
\examples{
# sample multi-site, longitudinal input data (modeled after EVP)
sample_ms_la_input <- dplyr::tibble('variable' = c('scd', 'scd', 'scd',
                                                   'scd', 'scd', 'scd',
                                                   'scd', 'scd', 'scd',
                                                   'scd', 'scd', 'scd',
                                                   'scd', 'scd'),
                             'site' = c('Site A','Site A','Site A',
                                        'Site A','Site A','Site A',
                                        'Site A','Site B','Site B',
                                        'Site B','Site B','Site B',
                                        'Site B','Site B'),
                             'count' = c(15, 24, 100, 93, 47, 65,
                                         33, 92, 153, 122, 5, 99,
                                         10, 30),
                             'time_start'=c('2018-01-01','2019-01-01',
                                   '2020-01-01', '2021-01-01', '2022-01-01',
                                   '2023-01-01', '2024-01-01','2018-01-01',
                                   '2019-01-01', '2020-01-01', '2021-01-01',
                                   '2022-01-01', '2023-01-01', '2024-01-01'),
                             'time_increment' = c('year','year','year',
                                   'year', 'year','year', 'year','year',
                                   'year','year','year','year','year',
                                   'year'))

# compute euclidean distance for each site & variable combination
ms_anom_euclidean(fot_input_tbl = sample_ms_la_input \%>\%
                        dplyr::mutate(time_start = as.Date(time_start)),
                  grp_vars = c('site', 'variable'),
                  var_col = 'count')

}
