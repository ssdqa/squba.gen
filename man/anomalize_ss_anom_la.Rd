% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anomaly_detection.R
\name{anomalize_ss_anom_la}
\alias{anomalize_ss_anom_la}
\title{*_ss_anom_la Anomaly Detection}
\usage{
anomalize_ss_anom_la(fot_input_tbl, grp_vars, time_var, var_col)
}
\arguments{
\item{fot_input_tbl}{table output by \code{\link[=compute_fot]{compute_fot()}} for *_ss_anom_at analyses}

\item{grp_vars}{the variables that should be preserved in the cross join}

\item{time_var}{the column with time information}

\item{var_col}{the column with the numerical statistic of interest for the euclidean
distance computation}
}
\value{
one dataframe with all columns from the original input table
plus the columns needed for timetk output generated by the
\code{anomalize} function
}
\description{
For analyses where the \code{time_period} is smaller than a year, this function
will execute \code{\link[timetk:anomalize]{timetk::anomalize()}} to identify outliers in the time series
using STL regression. For year-level analyses, the same input table will be
returned and a different anomaly detection method will be used at the *_output
stage
}
\examples{
# sample single-site, longitudinal input data (modeled after EVP)
sample_ss_la_input <- dplyr::tibble('variable' = c('scd', 'scd', 'scd',
                                                   'scd', 'scd', 'scd',
                                                   'scd', 'scd', 'scd',
                                                   'scd', 'scd', 'scd',
                                                   'scd', 'scd'),
                             'site' = c('Site A','Site A','Site A',
                                        'Site A','Site A','Site A',
                                        'Site A','Site A','Site A',
                                        'Site A','Site A','Site A',
                                        'Site A','Site A'),
                             'count' = c(15, 24, 100, 93, 47, 65,
                                         33, 92, 153, 122, 5, 99,
                                         10, 30),
                             'time_start'=c('2018-01-01', '2018-02-01',
                                '2018-03-01', '2018-04-01', '2018-05-01',
                                '2018-06-01', '2018-07-01', '2018-08-01',
                                '2018-09-01', '2018-10-01', '2018-11-01',
                                '2018-12-01', '2019-01-01', '2019-02-01'),
                             'time_increment' = c('month','month','month',
                                   'month', 'month','month', 'month','month',
                                   'month','month','month','month','month',
                                   'month'))
# execute 'anomalization' from timetk package to find anomalies
anomalize_ss_anom_la(fot_input_tbl = sample_ss_la_input \%>\%
                         dplyr::mutate(time_start = as.Date(time_start)),
                     grp_vars = c('site','variable'),
                     time_var = 'time_start',
                     var_col = 'count')


}
